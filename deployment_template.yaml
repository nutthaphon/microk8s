apiVersion: apps/v1
kind: Deployment

# It is common for all kind.
metadata:
  # Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.
  annotations:
    imageregistry: "https://hub.docker.com/"
  
  # The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters.
  clusterName: ""
  
  # CreationTimestamp is a timestamp representing the server time when this object was created.
  creationTimestamp: 2017-12-27T18:36:28Z
  
  # Number of seconds allowed for this object to gracefully terminate before it will be removed from the system.
  deletionGracePeriodSeconds: 60
  
  # DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. 
  deletionTimestamp: "2002-10-02T10:00:00-05:00"
  
  # Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services.
  labels:
    environment: production
    app: nginx
  
  # Name must be unique within a namespace.
  name: game-config-env-file
  
  # Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation.
  namespace: default
  
  # List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected.
  ownerReferences:
    apiVersion: ""
    kind: ""
    metadata:
    spec:
    status:
  
  # An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. 
  resourceVersion: "809965"
  
  # SelfLink is a URL representing this object. Populated by the system. Read-only.
  selfLink: /api/v1/namespaces/default/configmaps/game-config-env-file
  
  # UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
  uid: d9d1ca5b-eb34-11e7-887b-42010a8002b8
spec:
  # Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available.
  minReadySeconds: 0
  
  # Indicates that the deployment is paused.
  paused: false
  
  # The maximum time in seconds for a deployment to make progress before it is considered to be failed.
  progressDeadlineSeconds: 600
  
  # Number of desired pods. 
  replicas: 1

  # The number of old ReplicaSets to retain to allow rollback. 
  revisionHistoryLimit: 10
  
  # Label selector for pods. Existing ReplicaSets whose pods are selected 
  # by this will be the ones affected by this deployment. 
  # It must match the pod template's labels.
  selector:
    matchExpressions: 
    - key: "key"
      operator: "In"
      values: "value"
    - key: "key"
      operator: "In"
      values: "value"
    matchLabels:
      "key" : "value"
  
  # The deployment strategy to use to replace existing pods with new ones.
  strategy:
    rollingUpdate:
      # The maximum number of pods that can be scheduled above the desired number of pods.
      maxSurge: 10%
      
      # The maximum number of pods that can be unavailable during the update. 
      maxUnavailable: 10%
    
    # Type of deployment. Can be "Recreate" or "RollingUpdate".
    type: "RollingUpdate"
  
  # Because of It is recommended that users create Pods only through a Controller, and not directly. 
  # See Controllers: Deployment, Job, or StatefulSet.
  # Template describes the pods that will be created.
  template:
    metadata:
    spec:
status:
  # Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
  availableReplicas: 5

  # Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
  collisionCount: 5
  
  # Represents the latest available observations of a deployment's current state.
  conditions:
  - lastTransitionTime: "2002-10-02T10:00:00-05:00"
    lastUpdateTime: "2002-10-02T10:00:00-05:00"
    message: ""
    reason: ""
    status: "True"
    type: ""
  - lastTransitionTime: "2002-10-02T10:00:00-05:00"
    lastUpdateTime: "2002-10-02T10:00:00-05:00"
    message: ""
    reason: ""
    status: "True"
    type: ""
  # The generation observed by the deployment controller.
  observedGeneration: 5

  # Total number of ready pods targeted by this deployment.
  readyReplicas: 5

  # Total number of non-terminated pods targeted by this deployment (their labels match the selector).
  replicas : 5

  # Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
  unavailableReplicas: 2

  # Total number of non-terminated pods targeted by this deployment that have the desired template spec.
  updatedReplicas: 5
